*,
*::after,
*::before {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-size: 1.125rem;
  line-height: 150%;
}

.section {
  padding-block: 1.5rem;
}

.section > h2 {
  max-width: 60rem;
  margin-inline: auto;
  margin-block: 0;
  padding-inline: 1.5rem;
  margin-bottom: 0.75rem;
}

.container {
  max-width: 60rem;
  margin-inline: auto;
  padding-inline: 1.5rem;
  background-color: oklch(0.95 0.01 240);
}

.grid {
  display: grid;

  &__item {
    &--nth {
      @for $i from 1 through 12 {
        &-#{$i} {
          background-color: oklch(0.9 0.05 $i * 30);
        } //for구문. 이거는 많은 프로그램에서 사용. 가상의 숫자를 만든 것. 1부터 12까지 증가. oklch(0.9 0.05 $i * 30) 여기서 $i = 1부터 12
      }
    }
  }

  &--opt-1 {
    grid-template-columns: 1fr 1fr 1fr;
    //grid-template-rows: 1fr 1fr 1fr 1fr; //단점은 몇줄이 들어갈지 이미 정해져 있기 때문에 갯수가 넘어가면 레이아웃이 이상해짐
    grid-template-rows: 4fr;
    grid-auto-rows: 1fr;
    column-gap: 0.75rem;
    row-gap: 1.5rem;
  }

  &--opt-2 {
    //grid-template-columns: repeat(3, 1fr);
    //grid-template-columns: 12.5rem repeat(2, 1fr);
    //grid-template-columns: repeat(3,minmax(6.25rem, 1fr)); //부모를 찢고 나가는 상황이 발생함. 최대로 작아지면.
    grid-template-columns: repeat(auto-fit, minmax(12.5rem, 1fr));
    grid-auto-rows: 1fr; //minmax 넣지 않음.
    column-gap: 0.75rem;
    row-gap: 1.5rem;
  }
}
